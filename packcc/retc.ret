 // Single-line comment

/* Multi-line
  /* nested */ comment
*/

 program retc

  const int myInt = 1_23

  enum bool enum1
  end

  enum uint enum2
    field1 = 1234
    field2 = field1
    field3 = field2, field4, field5
    field6, field7, field8 = field3
    field9, field10
    field11
  end

  type uint type1
  type @uint type2
  type @uint[] type3
  type @uint[1234] type4
  type #uint type5
  type #uint[] type6
  type #uint[1234] type7
  type uint[1234] type8
  type type9

  type mytype type10

  type func

  struct struct1
  end

  struct packed struct2
    @struct2 next
    uint field1, field2, field3
    bool field4
    union field5 (uint, int)
    struct field6
      uint nested6a
      int nested6b
    end
  end

  struct struct3
    int field7
  end

  struct struct4
    inherits struct1, struct2, struct3
    char field8
    union field9( char )
  end

  union union1
  end

  union packed union2
    @union2 next
    uint field1, field2, field3
    bool field4
    union field5 (uint, int)
    struct field6
      uint nested6a
      int nested6b
    end
  end

  union union3
    int field7
  end

  union union4
    inherits union1, union2, union3
    char field8
    union field9( char )
  end

  var
    uint global1 , global2, global3
    uint global4, global5
    uint global6
    @char charPtr1
  end

  func import stdcall ExitProcess( uint uExitCode )
    //from 'kernel.dll' as 'ExitProcess'

  func declare Func2()

  func uint Func1()
    return 1234
  end

  func Func2()
    return
  end

  object object1
  end

  constructor object1()
  end

  destructor object1()
  end

  object packed object2
    @object next
    uint member1, member2, member3
    bool member4
    union member5 (uint, int)
    struct member6
      uint nested6a
      int nested6b
    end
  end

  constructor object2( member1, member6.nested6b )
  end

  destructor object2()
  end

  object object3
    int member7
  end

  constructor object3()
  end

  destructor object3()
  end

  object object4
    inherits object1, object2, object3
    char member8
    union member9( char )
  end

run
  var
    uint local1 , local2, local3
    uint local4, local5
    uint local6
    @char charPtr1
  end

MyLabel:
  if local1 == local2
    then goto MyLabel

  if local1 == local2
    if local1 == local5
      then goto MyLabel
  elseif local1 == local3
    if local1 == local5
      then if local1 == local6
        then goto MyLabel
  elseif local1 == local4
  else
  endif


  if local1 == local2
  endif
end
